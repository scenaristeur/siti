{"version":3,"file":"tiptap-extension-heading.umd.js","sources":["../src/heading.ts"],"sourcesContent":["import { Command, Node, mergeAttributes } from '@tiptap/core'\nimport { textblockTypeInputRule } from 'prosemirror-inputrules'\n\ntype Level = 1 | 2 | 3 | 4 | 5 | 6\n\nexport interface HeadingOptions {\n  levels: Level[],\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands {\n    heading: {\n      /**\n       * Set a heading node\n       */\n      setHeading: (attributes: { level: Level }) => Command,\n      /**\n       * Toggle a heading node\n       */\n      toggleHeading: (attributes: { level: Level }) => Command,\n    }\n  }\n}\n\nexport const Heading = Node.create<HeadingOptions>({\n  name: 'heading',\n\n  defaultOptions: {\n    levels: [1, 2, 3, 4, 5, 6],\n    HTMLAttributes: {},\n  },\n\n  content: 'inline*',\n\n  group: 'block',\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return this.options.levels\n      .map((level: Level) => ({\n        tag: `h${level}`,\n        attrs: { level },\n      }))\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    const hasLevel = this.options.levels.includes(node.attrs.level)\n    const level = hasLevel\n      ? node.attrs.level\n      : this.options.levels[0]\n\n    return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.setNode('heading', attributes)\n      },\n      toggleHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.toggleNode('heading', 'paragraph', attributes)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return this.options.levels.reduce((items, level) => ({\n      ...items,\n      ...{\n        [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({ level }),\n      },\n    }), {})\n  },\n\n  addInputRules() {\n    return this.options.levels.map(level => {\n      return textblockTypeInputRule(new RegExp(`^(#{1,${level}})\\\\s$`), this.type, { level })\n    })\n  },\n})\n"],"names":["Node","mergeAttributes","textblockTypeInputRule"],"mappings":";;;;;;QAyBa,OAAO,GAAGA,SAAI,CAAC,MAAM,CAAiB;MACjD,IAAI,EAAE,SAAS;MAEf,cAAc,EAAE;UACd,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAC1B,cAAc,EAAE,EAAE;OACnB;MAED,OAAO,EAAE,SAAS;MAElB,KAAK,EAAE,OAAO;MAEd,QAAQ,EAAE,IAAI;MAEd,aAAa;UACX,OAAO;cACL,KAAK,EAAE;kBACL,OAAO,EAAE,CAAC;kBACV,QAAQ,EAAE,KAAK;eAChB;WACF,CAAA;OACF;MAED,SAAS;UACP,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM;eACvB,GAAG,CAAC,CAAC,KAAY,MAAM;cACtB,GAAG,EAAE,IAAI,KAAK,EAAE;cAChB,KAAK,EAAE,EAAE,KAAK,EAAE;WACjB,CAAC,CAAC,CAAA;OACN;MAED,UAAU,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE;UACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;UAC/D,MAAM,KAAK,GAAG,QAAQ;gBAClB,IAAI,CAAC,KAAK,CAAC,KAAK;gBAChB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;UAE1B,OAAO,CAAC,IAAI,KAAK,EAAE,EAAEC,oBAAe,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,EAAE,CAAC,CAAC,CAAA;OACtF;MAED,WAAW;UACT,OAAO;cACL,UAAU,EAAE,UAAU,IAAI,CAAC,EAAE,QAAQ,EAAE;kBACrC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;sBACnD,OAAO,KAAK,CAAA;mBACb;kBAED,OAAO,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAA;eAC/C;cACD,aAAa,EAAE,UAAU,IAAI,CAAC,EAAE,QAAQ,EAAE;kBACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;sBACnD,OAAO,KAAK,CAAA;mBACb;kBAED,OAAO,QAAQ,CAAC,UAAU,CAAC,SAAS,EAAE,WAAW,EAAE,UAAU,CAAC,CAAA;eAC/D;WACF,CAAA;OACF;MAED,oBAAoB;UAClB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,MAAM;cACnD,GAAG,KAAK;cACR,GAAG;kBACD,CAAC,WAAW,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,KAAK,EAAE,CAAC;eAC1E;WACF,CAAC,EAAE,EAAE,CAAC,CAAA;OACR;MAED,aAAa;UACX,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK;cAClC,OAAOC,4CAAsB,CAAC,IAAI,MAAM,CAAC,SAAS,KAAK,QAAQ,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,CAAA;WACxF,CAAC,CAAA;OACH;GACF;;;;;;;;;;;"}