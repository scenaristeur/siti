import { Node, mergeAttributes } from '@tiptap/core';
import { wrappingInputRule } from 'prosemirror-inputrules';

const inputRegex = /^\s*>\s$/gm;
const Blockquote = Node.create({
    name: 'blockquote',
    defaultOptions: {
        HTMLAttributes: {},
    },
    content: 'block*',
    group: 'block',
    defining: true,
    parseHTML() {
        return [
            { tag: 'blockquote' },
        ];
    },
    renderHTML({ HTMLAttributes }) {
        return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];
    },
    addCommands() {
        return {
            setBlockquote: () => ({ commands }) => {
                return commands.wrapIn('blockquote');
            },
            toggleBlockquote: () => ({ commands }) => {
                return commands.toggleWrap('blockquote');
            },
            unsetBlockquote: () => ({ commands }) => {
                return commands.lift('blockquote');
            },
        };
    },
    addKeyboardShortcuts() {
        return {
            'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),
        };
    },
    addInputRules() {
        return [
            wrappingInputRule(inputRegex, this.type),
        ];
    },
});

export default Blockquote;
export { Blockquote, inputRegex };
//# sourceMappingURL=tiptap-extension-blockquote.esm.js.map
