/**
 * MIT License
 * 
 * Copyright 2020 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
  Generated by the artifact generator [@inrupt/lit-artifact-generator], version [0.13.4]
  as part of artifact: [vocab-inrupt-common], version: [0.7.4]
  on 'Monday, April 5, 2021 9:51 PM'.

  Vocabulary built from vocab list file: [inrupt-rdf/Common/Vocab-List-Inrupt-Common.yml].

  The Inrupt common vocabulary - just commonly used
 terms across all Inrupt products and services.
 */

import { VocabTerm, getLocalStore } from "@inrupt/solid-common-vocab";

import { DataFactory } from 'rdf-data-factory';
import * as RDF from 'rdf-js';

const rdfFactory: RDF.DataFactory = new DataFactory();

function _NS(localName: string): RDF.NamedNode {
  return rdfFactory.namedNode(`https://inrupt.com/vocab/common#${localName}`);
}

// Add 'any' type annotation in case this vocab includes 'NamedNode' instances,
// for example instances of Constant IRIs (TypeScript compiler will complain of
// "semantic error TS2742" otherwise).
/**
 * The Inrupt common vocabulary - just commonly used
 terms across all Inrupt products and services.
 */
const INRUPT_COMMON: any = {
  PREFIX: "inrupt_common",
  NAMESPACE: "https://inrupt.com/vocab/common#",
  PREFIX_AND_NAMESPACE: { "inrupt_common": "https://inrupt.com/vocab/common#" },
  NS: _NS,

  // *******************
  // All the Literals.
  // *******************

  /**
   * Failed to process incoming message as RDF
   */
  errFailedToProcessIncomingRdf: new VocabTerm(
    _NS("errFailedToProcessIncomingRdf"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addMessage(`Failed to process incoming message as RDF`, "en"),

  /**
   * Incoming request validated as RDF (it has [{{0}}] triples!)
   */
  msgRequestValidatedAsRdf: new VocabTerm(
    _NS("msgRequestValidatedAsRdf"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addMessage(`Incoming request validated as RDF (it has [{{0}}] triples!)`, "en"),
 };

export default INRUPT_COMMON;
