/**
 * MIT License
 * 
 * Copyright 2020 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * Generated by the artifact generator [@inrupt/lit-artifact-generator], version [0.13.4]
 * as part of artifact: [vocab-common-rdf], version: [0.7.4]
 * on 'Monday, April 5, 2021 9:51 PM'.
 *
 * Vocabulary built from vocab list file: [common-rdf/Common/Vocab-List-Common-Rdf.yml].
 *
 * This document is published by the Provenance Working Group (http://www.w3.org/2011/prov/wiki/Main_Page). 

If you wish to make comments regarding this document, please send them to public-prov-comments@w3.org (subscribe public-prov-comments-request@w3.org, archives http://lists.w3.org/Archives/Public/public-prov-comments/). All feedback is welcome.
 */

import { DataFactory } from 'rdf-data-factory';
import * as RdfTypes from 'rdf-js';

const rdfFactory: RdfTypes.DataFactory = new DataFactory();

function _NS(localName: string): RdfTypes.NamedNode {
  return rdfFactory.namedNode(`http://www.w3.org/ns/prov#${localName}`);
}

// Add 'any' type annotation in case this vocab includes 'NamedNode' instances,
// for example instances of Constant IRIs (TypeScript compiler will complain of
// "semantic error TS2742" otherwise).
/**
 * This document is published by the Provenance Working Group (http://www.w3.org/2011/prov/wiki/Main_Page). 

If you wish to make comments regarding this document, please send them to public-prov-comments@w3.org (subscribe public-prov-comments-request@w3.org, archives http://lists.w3.org/Archives/Public/public-prov-comments/). All feedback is welcome.
 */
const PROV_O: any = {
  PREFIX: "prov-o",
  NAMESPACE: "http://www.w3.org/ns/prov#",
  PREFIX_AND_NAMESPACE: { "prov-o": "http://www.w3.org/ns/prov#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * Activity
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Activity: _NS("Activity"),

  /**
   * Entity
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Entity: _NS("Entity"),

  /**
   * ActivityInfluence provides additional descriptions of an Activity's binary influence upon any other kind of resource. Instances of ActivityInfluence use the prov:activity property to cite the influencing Activity.
   *
   * See also:
   *  - http://www.w3.org/ns/prov#activity
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  ActivityInfluence: _NS("ActivityInfluence"),

  /**
   * An instance of prov:Influence provides additional descriptions about the binary prov:wasInfluencedBy relation from some influenced Activity, Entity, or Agent to the influencing Activity, Entity, or Agent. For example, :stomach_ache prov:wasInfluencedBy :spoon; prov:qualifiedInfluence [ a prov:Influence; prov:entity :spoon; :foo :bar ] . Because prov:Influence is a broad relation, the more specific relations (Communication, Delegation, End, etc.) should be used when applicable.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Influence: _NS("Influence"),

  /**
   * EntityInfluence provides additional descriptions of an Entity's binary influence upon any other kind of resource. Instances of EntityInfluence use the prov:entity property to cite the influencing Entity.
   *
   * See also:
   *  - http://www.w3.org/ns/prov#entity
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  EntityInfluence: _NS("EntityInfluence"),

  /**
   * Agent
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Agent: _NS("Agent"),

  /**
   * An instantaneous event, or event for short, happens in the world and marks a change in the world, in its activities and in its entities. The term 'event' is commonly used in process algebra with a similar meaning. Events represent communications or interactions; they are assumed to be atomic and instantaneous.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  InstantaneousEvent: _NS("InstantaneousEvent"),

  /**
   * AgentInfluence provides additional descriptions of an Agent's binary influence upon any other kind of resource. Instances of AgentInfluence use the prov:agent property to cite the influencing Agent.
   *
   * See also:
   *  - http://www.w3.org/ns/prov#agent
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  AgentInfluence: _NS("AgentInfluence"),

  /**
   * An instance of prov:Association provides additional descriptions about the binary prov:wasAssociatedWith relation from an prov:Activity to some prov:Agent that had some responsiblity for it. For example, :baking prov:wasAssociatedWith :baker; prov:qualifiedAssociation [ a prov:Association; prov:agent :baker; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Association: _NS("Association"),

  /**
   * An instance of prov:Attribution provides additional descriptions about the binary prov:wasAttributedTo relation from an prov:Entity to some prov:Agent that had some responsible for it. For example, :cake prov:wasAttributedTo :baker; prov:qualifiedAttribution [ a prov:Attribution; prov:entity :baker; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Attribution: _NS("Attribution"),

  /**
   * Note that there are kinds of bundles (e.g. handwritten letters, audio recordings, etc.) that are not expressed in PROV-O, but can be still be described by PROV-O.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Bundle: _NS("Bundle"),

  /**
   * Collection
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Collection: _NS("Collection"),

  /**
   * An instance of prov:Communication provides additional descriptions about the binary prov:wasInformedBy relation from an informed prov:Activity to the prov:Activity that informed it. For example, :you_jumping_off_bridge prov:wasInformedBy :everyone_else_jumping_off_bridge; prov:qualifiedCommunication [ a prov:Communication; prov:activity :everyone_else_jumping_off_bridge; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Communication: _NS("Communication"),

  /**
   * An instance of prov:Delegation provides additional descriptions about the binary prov:actedOnBehalfOf relation from a performing prov:Agent to some prov:Agent for whom it was performed. For example, :mixing prov:wasAssociatedWith :toddler . :toddler prov:actedOnBehalfOf :mother; prov:qualifiedDelegation [ a prov:Delegation; prov:entity :mother; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Delegation: _NS("Delegation"),

  /**
   * An instance of prov:Derivation provides additional descriptions about the binary prov:wasDerivedFrom relation from some derived prov:Entity to another prov:Entity from which it was derived. For example, :chewed_bubble_gum prov:wasDerivedFrom :unwrapped_bubble_gum; prov:qualifiedDerivation [ a prov:Derivation; prov:entity :unwrapped_bubble_gum; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Derivation: _NS("Derivation"),

  /**
   * EmptyCollection
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  EmptyCollection: _NS("EmptyCollection"),

  /**
   * An instance of prov:End provides additional descriptions about the binary prov:wasEndedBy relation from some ended prov:Activity to an prov:Entity that ended it. For example, :ball_game prov:wasEndedBy :buzzer; prov:qualifiedEnd [ a prov:End; prov:entity :buzzer; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  End: _NS("End"),

  /**
   * An instance of prov:Generation provides additional descriptions about the binary prov:wasGeneratedBy relation from a generated prov:Entity to the prov:Activity that generated it. For example, :cake prov:wasGeneratedBy :baking; prov:qualifiedGeneration [ a prov:Generation; prov:activity :baking; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Generation: _NS("Generation"),

  /**
   * An instance of prov:Invalidation provides additional descriptions about the binary prov:wasInvalidatedBy relation from an invalidated prov:Entity to the prov:Activity that invalidated it. For example, :uncracked_egg prov:wasInvalidatedBy :baking; prov:qualifiedInvalidation [ a prov:Invalidation; prov:activity :baking; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Invalidation: _NS("Invalidation"),

  /**
   * Location
   *
   * See also:
   *  - http://www.w3.org/ns/prov#atLocation
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Location: _NS("Location"),

  /**
   * Organization
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Organization: _NS("Organization"),

  /**
   * Person
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Person: _NS("Person"),

  /**
   * There exist no prescriptive requirement on the nature of plans, their representation, the actions or steps they consist of, or their intended goals. Since plans may evolve over time, it may become necessary to track their provenance, so plans themselves are entities. Representing the plan explicitly in the provenance can be useful for various tasks: for example, to validate the execution as represented in the provenance record, to manage expectation failures, or to provide explanations.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Plan: _NS("Plan"),

  /**
   * An instance of prov:PrimarySource provides additional descriptions about the binary prov:hadPrimarySource relation from some secondary prov:Entity to an earlier, primary prov:Entity. For example, :blog prov:hadPrimarySource :newsArticle; prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :newsArticle; :foo :bar ] .
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  PrimarySource: _NS("PrimarySource"),

  /**
   * An instance of prov:Quotation provides additional descriptions about the binary prov:wasQuotedFrom relation from some taken prov:Entity from an earlier, larger prov:Entity. For example, :here_is_looking_at_you_kid prov:wasQuotedFrom :casablanca_script; prov:qualifiedQuotation [ a prov:Quotation; prov:entity :casablanca_script; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Quotation: _NS("Quotation"),

  /**
   * An instance of prov:Revision provides additional descriptions about the binary prov:wasRevisionOf relation from some newer prov:Entity to an earlier prov:Entity. For example, :draft_2 prov:wasRevisionOf :draft_1; prov:qualifiedRevision [ a prov:Revision; prov:entity :draft_1; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Revision: _NS("Revision"),

  /**
   * Role
   *
   * See also:
   *  - http://www.w3.org/ns/prov#hadRole
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Role: _NS("Role"),

  /**
   * SoftwareAgent
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  SoftwareAgent: _NS("SoftwareAgent"),

  /**
   * An instance of prov:Start provides additional descriptions about the binary prov:wasStartedBy relation from some started prov:Activity to an prov:Entity that started it. For example, :foot_race prov:wasStartedBy :bang; prov:qualifiedStart [ a prov:Start; prov:entity :bang; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ] .
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Start: _NS("Start"),

  /**
   * An instance of prov:Usage provides additional descriptions about the binary prov:used relation from some prov:Activity to an prov:Entity that it used. For example, :keynote prov:used :podium; prov:qualifiedUsage [ a prov:Usage; prov:entity :podium; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  Usage: _NS("Usage"),


  // *******************
  // All the Properties.
  // *******************

  /**
   * Classify prov-o terms into three categories, including 'starting-point', 'qualifed', and 'extended'. This classification is used by the prov-o html document to gently introduce prov-o terms to its users. 
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  category: _NS("category"),

  /**
   * Classify prov-o terms into six components according to prov-dm, including 'agents-responsibility', 'alternate', 'annotations', 'collections', 'derivations', and 'entities-activities'. This classification is used so that readers of prov-o specification can find its correspondence with the prov-dm specification.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  component: _NS("component"),

  /**
   * A reference to the principal section of the PROV-CONSTRAINTS document that describes this concept.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  constraints: _NS("constraints"),

  /**
   * A definition quoted from PROV-DM or PROV-CONSTRAINTS that describes the concept expressed with this OWL term.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  definition: _NS("definition"),

  /**
   * A reference to the principal section of the PROV-DM document that describes this concept.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  dm: _NS("dm"),

  /**
   * A reference to the principal section of the PROV-DM document that describes this concept.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  n: _NS("n"),

  /**
   * activity
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  activity: _NS("activity"),

  /**
   * The _optional_ Activity of an Influence, which used, generated, invalidated, or was the responsibility of some Entity. This property is _not_ used by ActivityInfluence (use prov:activity instead).
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  hadActivity: _NS("hadActivity"),

  /**
   * When the prov-o term does not have a definition drawn from prov-dm, and the prov-o editor provides one.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  editorsDefinition: _NS("editorsDefinition"),

  /**
   * agent
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  agent: _NS("agent"),

  /**
   * Classes and properties used to qualify relationships are annotated with prov:unqualifiedForm to indicate the property used to assert an unqualified provenance relation.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  unqualifiedForm: _NS("unqualifiedForm"),

  /**
   * An prov:Agent that had some (unspecified) responsibility for the occurrence of this prov:Activity.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasAssociatedWith: _NS("wasAssociatedWith"),

  /**
   * Attribution is the ascribing of an entity to an agent.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasAttributedTo: _NS("wasAttributedTo"),

  /**
   * An activity a2 is dependent on or informed by another activity a1, by way of some unspecified entity that is generated by a1 and used by a2.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasInformedBy: _NS("wasInformedBy"),

  /**
   * An object property to express the accountability of an agent towards another agent. The subordinate agent acted on behalf of the responsible agent in an actual activity. 
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  actedOnBehalfOf: _NS("actedOnBehalfOf"),

  /**
   * The more specific subproperties of prov:wasDerivedFrom (i.e., prov:wasQuotedFrom, prov:wasRevisionOf, prov:hadPrimarySource) should be used when applicable.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasDerivedFrom: _NS("wasDerivedFrom"),

  /**
   * End is when an activity is deemed to have ended. An end may refer to an entity, known as trigger, that terminated the activity.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasEndedBy: _NS("wasEndedBy"),

  /**
   * entity
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  entity: _NS("entity"),

  /**
   * wasGeneratedBy
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasGeneratedBy: _NS("wasGeneratedBy"),

  /**
   * Because prov:wasInfluencedBy is a broad relation, its more specific subproperties (e.g. prov:wasInformedBy, prov:actedOnBehalfOf, prov:wasEndedBy, etc.) should be used when applicable.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasInfluencedBy: _NS("wasInfluencedBy"),

  /**
   * wasInvalidatedBy
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasInvalidatedBy: _NS("wasInvalidatedBy"),

  /**
   * The Location of any resource.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  atLocation: _NS("atLocation"),

  /**
   * hadPrimarySource
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  hadPrimarySource: _NS("hadPrimarySource"),

  /**
   * An entity is derived from an original entity by copying, or 'quoting', some or all of it.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasQuotedFrom: _NS("wasQuotedFrom"),

  /**
   * A revision is a derivation that revises an entity into a revised version.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasRevisionOf: _NS("wasRevisionOf"),

  /**
   * The _optional_ Role that an Entity assumed in the context of an Activity. For example, :baking prov:used :spoon; prov:qualified [ a prov:Usage; prov:entity :spoon; prov:hadRole roles:mixing_implement ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  hadRole: _NS("hadRole"),

  /**
   * Start is when an activity is deemed to have started. A start may refer to an entity, known as trigger, that initiated the activity.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  wasStartedBy: _NS("wasStartedBy"),

  /**
   * A prov:Entity that was used by this prov:Activity. For example, :baking prov:used :spoon, :egg, :oven .
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  used: _NS("used"),

  /**
   * If this Agent prov:actedOnBehalfOf Agent :ag, then it can qualify how with prov:qualifiedResponsibility [ a prov:Responsibility;  prov:agent :ag; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedDelegation: _NS("qualifiedDelegation"),

  /**
   * PROV-O does not define all property inverses. The directionalities defined in PROV-O should be given preference over those not defined. However, if users wish to name the inverse of a PROV-O property, the local name given by prov:inverse should be used.
   *
   * See also:
   *  - http://www.w3.org/TR/prov-o/#names-of-inverse-properties
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  inverse: _NS("inverse"),

  /**
   * This annotation property links a subproperty of prov:wasInfluencedBy with the subclass of prov:Influence and the qualifying property that are used to qualify it. 

Example annotation:

    prov:wasGeneratedBy prov:qualifiedForm prov:qualifiedGeneration, prov:Generation .

Then this unqualified assertion:

    :entity1 prov:wasGeneratedBy :activity1 .

can be qualified by adding:

   :entity1 prov:qualifiedGeneration :entity1Gen .
   :entity1Gen 
       a prov:Generation, prov:Influence;
       prov:activity :activity1;
       :customValue 1337 .

Note how the value of the unqualified influence (prov:wasGeneratedBy :activity1) is mirrored as the value of the prov:activity (or prov:entity, or prov:agent) property on the influence class.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedForm: _NS("qualifiedForm"),

  /**
   * Subproperties of prov:influencer are used to cite the object of an unqualified PROV-O triple whose predicate is a subproperty of prov:wasInfluencedBy (e.g. prov:used, prov:wasGeneratedBy). prov:influencer is used much like rdf:object is used.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  influencer: _NS("influencer"),

  /**
   * A note by the OWL development team about how this term expresses the PROV-DM concept, or how it should be used in context of semantic web or linked data.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  editorialNote: _NS("editorialNote"),

  /**
   * alternateOf
   *
   * See also:
   *  - http://www.w3.org/ns/prov#specializationOf
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  alternateOf: _NS("alternateOf"),

  /**
   * specializationOf
   *
   * See also:
   *  - http://www.w3.org/ns/prov#alternateOf
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  specializationOf: _NS("specializationOf"),

  /**
   *
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  aq: _NS("aq"),

  /**
   *
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  sharesDefinitionWith: _NS("sharesDefinitionWith"),

  /**
   * The time at which an InstantaneousEvent occurred, in the form of xsd:dateTime.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  atTime: _NS("atTime"),

  /**
   * The time at which an activity ended. See also prov:startedAtTime.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  endedAtTime: _NS("endedAtTime"),

  /**
   * The time at which an entity was completely created and is available for use.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  generatedAtTime: _NS("generatedAtTime"),

  /**
   * The time at which an entity was invalidated (i.e., no longer usable).
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  invalidatedAtTime: _NS("invalidatedAtTime"),

  /**
   * The time at which an activity started. See also prov:endedAtTime.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  startedAtTime: _NS("startedAtTime"),

  /**
   * generated
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  generated: _NS("generated"),

  /**
   * influenced
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  influenced: _NS("influenced"),

  /**
   * The _optional_ Generation involved in an Entity's Derivation.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  hadGeneration: _NS("hadGeneration"),

  /**
   * hadMember
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  hadMember: _NS("hadMember"),

  /**
   * The _optional_ Plan adopted by an Agent in Association with some Activity. Plan specifications are out of the scope of this specification.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  hadPlan: _NS("hadPlan"),

  /**
   * If this Entity prov:hadPrimarySource Entity :e, then it can qualify how using prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :e; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedPrimarySource: _NS("qualifiedPrimarySource"),

  /**
   * The _optional_ Usage involved in an Entity's Derivation.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  hadUsage: _NS("hadUsage"),

  /**
   * invalidated
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  invalidated: _NS("invalidated"),

  /**
   * The position that this OWL term should be listed within documentation. The scope of the documentation (e.g., among all terms, among terms within a prov:category, among properties applying to a particular class, etc.) is unspecified.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  order: _NS("order"),

  /**
   * If this Activity prov:wasAssociatedWith Agent :ag, then it can qualify the Association using prov:qualifiedAssociation [ a prov:Association;  prov:agent :ag; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedAssociation: _NS("qualifiedAssociation"),

  /**
   * Because prov:qualifiedInfluence is a broad relation, the more specific relations (qualifiedCommunication, qualifiedDelegation, qualifiedEnd, etc.) should be used when applicable.
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedInfluence: _NS("qualifiedInfluence"),

  /**
   * If this Entity prov:wasAttributedTo Agent :ag, then it can qualify how it was influenced using prov:qualifiedAttribution [ a prov:Attribution;  prov:agent :ag; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedAttribution: _NS("qualifiedAttribution"),

  /**
   * If this Activity prov:wasInformedBy Activity :a, then it can qualify how it was influenced using prov:qualifiedCommunication [ a prov:Communication;  prov:activity :a; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedCommunication: _NS("qualifiedCommunication"),

  /**
   * If this Entity prov:wasDerivedFrom Entity :e, then it can qualify how it was derived using prov:qualifiedDerivation [ a prov:Derivation;  prov:entity :e; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedDerivation: _NS("qualifiedDerivation"),

  /**
   * If this Activity prov:wasEndedBy Entity :e1, then it can qualify how it was ended using prov:qualifiedEnd [ a prov:End;  prov:entity :e1; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedEnd: _NS("qualifiedEnd"),

  /**
   * If this Activity prov:generated Entity :e, then it can qualify how it performed the Generation using prov:qualifiedGeneration [ a prov:Generation;  prov:entity :e; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedGeneration: _NS("qualifiedGeneration"),

  /**
   * If this Entity prov:wasInvalidatedBy Activity :a, then it can qualify how it was invalidated using prov:qualifiedInvalidation [ a prov:Invalidation;  prov:activity :a; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedInvalidation: _NS("qualifiedInvalidation"),

  /**
   * If this Entity prov:wasQuotedFrom Entity :e, then it can qualify how using prov:qualifiedQuotation [ a prov:Quotation;  prov:entity :e; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedQuotation: _NS("qualifiedQuotation"),

  /**
   * If this Entity prov:wasRevisionOf Entity :e, then it can qualify how it was revised using prov:qualifiedRevision [ a prov:Revision;  prov:entity :e; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedRevision: _NS("qualifiedRevision"),

  /**
   * If this Activity prov:wasStartedBy Entity :e1, then it can qualify how it was started using prov:qualifiedStart [ a prov:Start;  prov:entity :e1; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedStart: _NS("qualifiedStart"),

  /**
   * If this Activity prov:used Entity :e, then it can qualify how it used it using prov:qualifiedUsage [ a prov:Usage; prov:entity :e; :foo :bar ].
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  qualifiedUsage: _NS("qualifiedUsage"),

  /**
   *
   */
  todo: _NS("todo"),

  /**
   * value
   *
   * Defined by the vocabulary: http://www.w3.org/ns/prov-o#
   */
  value: _NS("value"),
 }

export default PROV_O;
