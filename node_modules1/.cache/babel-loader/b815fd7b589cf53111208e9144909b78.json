{"remainingRequest":"/home/smag/dev/siti/node_modules/babel-loader/lib/index.js!/home/smag/dev/siti/node_modules/eslint-loader/index.js??ref--13-0!/home/smag/dev/siti/src/store/modules/viki.js","dependencies":[{"path":"/home/smag/dev/siti/src/store/modules/viki.js","mtime":1622988546622},{"path":"/home/smag/dev/siti/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/smag/dev/siti/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/smag/dev/siti/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly9pbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CnZhciBzdGF0ZSA9IGZ1bmN0aW9uIHN0YXRlKCkgewogIHJldHVybiB7fTsKfTsKCnZhciBhY3Rpb25zID0gey8vIHVwbG9hZExvY2FsVG9Qb2QoY29udGV4dCxmaWxlKXsKICAvLyAgIHRyeXsKICAvLyAgICAgY29uc29sZS5sb2coZmlsZSkKICAvLyAgICAgVnVlLnByb3RvdHlwZS4kdXBsb2FkTG9jYWxUb1BvZChmaWxlKQogIC8vICAgICAvLyBsZXQgZ3JhcGggPSBKU09OLnBhcnNlKGZpbGUuY29udGVudCkKICAvLyAgICAgLy8gZ3JhcGgucGF0aCA9IGZpbGUucGF0aAogIC8vICAgICAvLyBjb250ZXh0LmNvbW1pdCgnYWRkVG9OZXR3b3JrJywgZ3JhcGgpCiAgLy8gICB9Y2F0Y2goZSl7CiAgLy8gICAgIGNvbnNvbGUubG9nKGZpbGUsICItPiIsIGUpCiAgLy8gICAgIGFsZXJ0KGUrIiBpbiAiK2ZpbGUucGF0aCkKICAvLyAgIH0KICAvLyB9Cn07CnZhciBtdXRhdGlvbnMgPSB7Ly8gc2V0UG9kKHN0YXRlLHApewogIC8vICAgc3RhdGUucG9kID0gcAogIC8vIH0sCn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBhY3Rpb25zOiBhY3Rpb25zLAogIG11dGF0aW9uczogbXV0YXRpb25zCn07"},{"version":3,"sources":["/home/smag/dev/siti/src/store/modules/viki.js"],"names":["state","actions","mutations","namespaced"],"mappings":"AAAA;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAO,EAAP;AAAA,CAAd;;AAIA,IAAMC,OAAO,GAAG,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZc,CAAhB;AAeA,IAAMC,SAAS,GAAG,CAChB;AACA;AACA;AAHgB,CAAlB;AAOA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbH,EAAAA,KAAK,EAALA,KAFa;AAGbC,EAAAA,OAAO,EAAPA,OAHa;AAIbC,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["//import Vue from 'vue';\n\nconst state = () => ({\n\n})\n\nconst actions = {\n  // uploadLocalToPod(context,file){\n  //   try{\n  //     console.log(file)\n  //     Vue.prototype.$uploadLocalToPod(file)\n  //     // let graph = JSON.parse(file.content)\n  //     // graph.path = file.path\n  //     // context.commit('addToNetwork', graph)\n  //   }catch(e){\n  //     console.log(file, \"->\", e)\n  //     alert(e+\" in \"+file.path)\n  //   }\n  // }\n}\n\nconst mutations = {\n  // setPod(state,p){\n  //   state.pod = p\n  // },\n\n}\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n  mutations\n}\n"]}]}