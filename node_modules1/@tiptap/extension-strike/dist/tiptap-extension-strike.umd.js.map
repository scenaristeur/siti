{"version":3,"file":"tiptap-extension-strike.umd.js","sources":["../src/strike.ts"],"sourcesContent":["import {\n  Command,\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface StrikeOptions {\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands {\n    strike: {\n      /**\n       * Set a strike mark\n       */\n      setStrike: () => Command,\n      /**\n       * Toggle a strike mark\n       */\n      toggleStrike: () => Command,\n      /**\n       * Unset a strike mark\n       */\n      unsetStrike: () => Command,\n    }\n  }\n}\n\nexport const inputRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))$/gm\nexport const pasteRegex = /(?:^|\\s)((?:~~)((?:[^~]+))(?:~~))/gm\n\nexport const Strike = Mark.create<StrikeOptions>({\n  name: 'strike',\n\n  defaultOptions: {\n    HTMLAttributes: {},\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 's',\n      },\n      {\n        tag: 'del',\n      },\n      {\n        tag: 'strike',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('line-through') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setStrike: () => ({ commands }) => {\n        return commands.setMark('strike')\n      },\n      toggleStrike: () => ({ commands }) => {\n        return commands.toggleMark('strike')\n      },\n      unsetStrike: () => ({ commands }) => {\n        return commands.unsetMark('strike')\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-x': () => this.editor.commands.toggleStrike(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule(inputRegex, this.type),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule(pasteRegex, this.type),\n    ]\n  },\n})\n"],"names":["Mark","mergeAttributes","markInputRule","markPasteRule"],"mappings":";;;;;;QA+Ba,UAAU,GAAG,uCAAsC;QACnD,UAAU,GAAG,sCAAqC;QAElD,MAAM,GAAGA,SAAI,CAAC,MAAM,CAAgB;MAC/C,IAAI,EAAE,QAAQ;MAEd,cAAc,EAAE;UACd,cAAc,EAAE,EAAE;OACnB;MAED,SAAS;UACP,OAAO;cACL;kBACE,GAAG,EAAE,GAAG;eACT;cACD;kBACE,GAAG,EAAE,KAAK;eACX;cACD;kBACE,GAAG,EAAE,QAAQ;eACd;cACD;kBACE,KAAK,EAAE,iBAAiB;kBACxB,SAAS,EAAE,KAAK;kBAChB,QAAQ,EAAE,KAAK,KAAM,KAAgB,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;eAC7E;WACF,CAAA;OACF;MAED,UAAU,CAAC,EAAE,cAAc,EAAE;UAC3B,OAAO,CAAC,GAAG,EAAEC,oBAAe,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC,EAAE,CAAC,CAAC,CAAA;OAC9E;MAED,WAAW;UACT,OAAO;cACL,SAAS,EAAE,MAAM,CAAC,EAAE,QAAQ,EAAE;kBAC5B,OAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;eAClC;cACD,YAAY,EAAE,MAAM,CAAC,EAAE,QAAQ,EAAE;kBAC/B,OAAO,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;eACrC;cACD,WAAW,EAAE,MAAM,CAAC,EAAE,QAAQ,EAAE;kBAC9B,OAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;eACpC;WACF,CAAA;OACF;MAED,oBAAoB;UAClB,OAAO;cACL,aAAa,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE;WACzD,CAAA;OACF;MAED,aAAa;UACX,OAAO;cACLC,kBAAa,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC;WACrC,CAAA;OACF;MAED,aAAa;UACX,OAAO;cACLC,kBAAa,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC;WACrC,CAAA;OACF;GACF;;;;;;;;;;;;;"}