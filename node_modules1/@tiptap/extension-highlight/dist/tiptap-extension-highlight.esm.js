import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';

const inputRegex = /(?:^|\s)((?:==)((?:[^~]+))(?:==))$/gm;
const pasteRegex = /(?:^|\s)((?:==)((?:[^~]+))(?:==))/gm;
const Highlight = Mark.create({
    name: 'highlight',
    defaultOptions: {
        multicolor: false,
        HTMLAttributes: {},
    },
    addAttributes() {
        if (!this.options.multicolor) {
            return {};
        }
        return {
            color: {
                default: null,
                parseHTML: element => {
                    return {
                        color: element.getAttribute('data-color') || element.style.backgroundColor,
                    };
                },
                renderHTML: attributes => {
                    if (!attributes.color) {
                        return {};
                    }
                    return {
                        'data-color': attributes.color,
                        style: `background-color: ${attributes.color}`,
                    };
                },
            },
        };
    },
    parseHTML() {
        return [
            {
                tag: 'mark',
            },
        ];
    },
    renderHTML({ HTMLAttributes }) {
        return ['mark', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];
    },
    addCommands() {
        return {
            setHighlight: attributes => ({ commands }) => {
                return commands.setMark('highlight', attributes);
            },
            toggleHighlight: attributes => ({ commands }) => {
                return commands.toggleMark('highlight', attributes);
            },
            unsetHighlight: () => ({ commands }) => {
                return commands.unsetMark('highlight');
            },
        };
    },
    addKeyboardShortcuts() {
        return {
            'Mod-Shift-h': () => this.editor.commands.toggleHighlight(),
        };
    },
    addInputRules() {
        return [
            markInputRule(inputRegex, this.type),
        ];
    },
    addPasteRules() {
        return [
            markPasteRule(inputRegex, this.type),
        ];
    },
});

export default Highlight;
export { Highlight, inputRegex, pasteRegex };
//# sourceMappingURL=tiptap-extension-highlight.esm.js.map
