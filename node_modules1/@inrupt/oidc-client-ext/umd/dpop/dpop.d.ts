import { JSONWebKey, JWKECKey, JWKOctKey, JWKOKPKey, JWKRSAKey } from "jose";
import JWT, { VerifyOptions } from "jsonwebtoken";
export declare function validateIdToken(token: string, rawJwks: unknown, issuer: string, audience: string): Promise<boolean>;
export declare function signJwt(payload: Record<string, any>, key: JWKECKey | JWKOKPKey | JWKRSAKey | JWKOctKey, options?: JWT.SignOptions): Promise<string>;
export declare function decodeJwt(token: string, key?: JWKECKey | JWKOKPKey | JWKRSAKey | JWKOctKey, options?: VerifyOptions): Promise<Record<string, unknown>>;
export declare function privateJwkToPublicJwk(key: JSONWebKey): Promise<JSONWebKey>;
export declare function normalizeHttpUriClaim(audience: string): string;
export declare function createDpopHeader(audience: string, method: string, key: JSONWebKey): Promise<string>;
