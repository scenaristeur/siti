(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tiptap/core'), require('prosemirror-inputrules')) :
  typeof define === 'function' && define.amd ? define(['exports', '@tiptap/core', 'prosemirror-inputrules'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['@tiptap/extension-typography'] = {}, global.core, global.prosemirrorInputrules));
}(this, (function (exports, core, prosemirrorInputrules) { 'use strict';

  const leftArrow = new prosemirrorInputrules.InputRule(/<-$/, '←');
  const rightArrow = new prosemirrorInputrules.InputRule(/->$/, '→');
  const copyright = new prosemirrorInputrules.InputRule(/\(c\)$/, '©');
  const registeredTrademark = new prosemirrorInputrules.InputRule(/\(r\)$/, '®');
  const oneHalf = new prosemirrorInputrules.InputRule(/1\/2$/, '½');
  const plusMinus = new prosemirrorInputrules.InputRule(/\+\/-$/, '±');
  const notEqual = new prosemirrorInputrules.InputRule(/!=$/, '≠');
  const laquo = new prosemirrorInputrules.InputRule(/<<$/, '«');
  const raquo = new prosemirrorInputrules.InputRule(/>>$/, '»');
  const multiplication = new prosemirrorInputrules.InputRule(/\d+\s?([*x])\s?\d+$/, '×');
  const Typography = core.Extension.create({
      name: 'typography',
      addInputRules() {
          return [
              prosemirrorInputrules.emDash,
              prosemirrorInputrules.ellipsis,
              prosemirrorInputrules.openDoubleQuote,
              prosemirrorInputrules.closeDoubleQuote,
              prosemirrorInputrules.openSingleQuote,
              prosemirrorInputrules.closeSingleQuote,
              leftArrow,
              rightArrow,
              copyright,
              registeredTrademark,
              oneHalf,
              plusMinus,
              notEqual,
              laquo,
              raquo,
              multiplication,
          ];
      },
  });

  exports.Typography = Typography;
  exports.copyright = copyright;
  exports.default = Typography;
  exports.laquo = laquo;
  exports.leftArrow = leftArrow;
  exports.multiplication = multiplication;
  exports.notEqual = notEqual;
  exports.oneHalf = oneHalf;
  exports.plusMinus = plusMinus;
  exports.raquo = raquo;
  exports.registeredTrademark = registeredTrademark;
  exports.rightArrow = rightArrow;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=tiptap-extension-typography.umd.js.map
