/**
 * MIT License
 * 
 * Copyright 2020 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
  Generated by the artifact generator [@inrupt/lit-artifact-generator], version [0.13.4]
  as part of artifact: [vocab-solid-common], version: [0.7.4]
  on 'Monday, April 5, 2021 9:51 PM'.

  Vocabulary built from vocab list file: [solid-rdf/Common/Vocab-List-Solid-Common.yml].

  The Solid vocabulary providing terms (e.g. classes, properties and text strings (e.g.
 informative labels or error messages) used by the Solid ACL system.
 */

import { VocabTerm, getLocalStore } from "@inrupt/solid-common-vocab";

import { DataFactory } from 'rdf-data-factory';
import * as RDF from 'rdf-js';

const rdfFactory: RDF.DataFactory = new DataFactory();

function _NS(localName: string): RDF.NamedNode {
  return rdfFactory.namedNode(`https://inrupt.com/vocab/solid-meta-acl#${localName}`);
}

// Add 'any' type annotation in case this vocab includes 'NamedNode' instances,
// for example instances of Constant IRIs (TypeScript compiler will complain of
// "semantic error TS2742" otherwise).
/**
 * The Solid vocabulary providing terms (e.g. classes, properties and text strings (e.g.
 informative labels or error messages) used by the Solid ACL system.
 */
const SOLID_META_ACL: any = {
  PREFIX: "solid-meta-acl",
  NAMESPACE: "https://inrupt.com/vocab/solid-meta-acl#",
  PREFIX_AND_NAMESPACE: { "solid-meta-acl": "https://inrupt.com/vocab/solid-meta-acl#" },
  NS: _NS,

  // *******************
  // All the Properties.
  // *******************

  /**
   * The root subject for ACL metadata.
 The idea for subject roots is that we could build up an entire graph of
 metadata (i.e. as processing progresses along a chain of processors, with each
 processor enriching this metadata with their specific metadata), and this
 term defines the root term of that graph.
   *
   * Defined by the vocabulary: https://inrupt.com/vocab/solid-meta-acl#
   */
  subjectRoot: new VocabTerm(
    _NS("subjectRoot"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addIsDefinedBy(_NS("https://inrupt.com/vocab/solid-meta-acl#"))
    .addLabel(`Subject root`, "en")
    .addComment(`The root subject for ACL metadata.
 The idea for subject roots is that we could build up an entire graph of
 metadata (i.e. as processing progresses along a chain of processors, with each
 processor enriching this metadata with their specific metadata), and this
 term defines the root term of that graph.`, "en"),

  /**
   * The URI that contains the ACL
   *
   * Defined by the vocabulary: https://inrupt.com/vocab/solid-meta-acl#
   */
  aclUri: new VocabTerm(
    _NS("aclUri"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addIsDefinedBy(_NS("https://inrupt.com/vocab/solid-meta-acl#"))
    .addLabel(`ACL URI`, "en")
    .addComment(`The URI that contains the ACL`, "en"),
 };

export default SOLID_META_ACL;
