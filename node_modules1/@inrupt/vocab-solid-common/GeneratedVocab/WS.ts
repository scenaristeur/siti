/**
 * MIT License
 * 
 * Copyright 2020 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
  Generated by the artifact generator [@inrupt/lit-artifact-generator], version [0.13.4]
  as part of artifact: [vocab-solid-common], version: [0.7.4]
  on 'Monday, April 5, 2021 9:51 PM'.

  Vocabulary built from vocab list file: [solid-rdf/Common/Vocab-List-Solid-Common.yml].

  This extension adds predicates making explicit some implicit knowledge in the Workspace ontology.
 */

import { VocabTerm, getLocalStore } from "@inrupt/solid-common-vocab";

import { DataFactory } from 'rdf-data-factory';
import * as RDF from 'rdf-js';

const rdfFactory: RDF.DataFactory = new DataFactory();

function _NS(localName: string): RDF.NamedNode {
  return rdfFactory.namedNode(`http://www.w3.org/ns/pim/space#${localName}`);
}

// Add 'any' type annotation in case this vocab includes 'NamedNode' instances,
// for example instances of Constant IRIs (TypeScript compiler will complain of
// "semantic error TS2742" otherwise).
/**
 * This extension adds predicates making explicit some implicit knowledge in the Workspace ontology.
 */
const WS: any = {
  PREFIX: "ws",
  NAMESPACE: "http://www.w3.org/ns/pim/space#",
  PREFIX_AND_NAMESPACE: { "ws": "http://www.w3.org/ns/pim/space#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * A file describing a configuration. In this context, it is
 expected to describe the workspace configuration.
   *
   * This term provides non-English descriptions, but a mismatch between labels and comments, with [1] label in the language [fr], but [0] comments.
   */
  ConfigurationFile: new VocabTerm(
    _NS("ConfigurationFile"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Configuration file`, "en")
    .addLabel(`Fichier de configuration`, "fr")
    .addComment(`A file describing a configuration. In this context, it is
 expected to describe the workspace configuration.`, "en"),

  /**
   * A  storage is a space of URIs in which you can individually control for each resource
    who has access to it.

   */
  ControlledStorage: new VocabTerm(
    _NS("ControlledStorage"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`access controlled storage`)
    .addCommentNoLanguage(`A  storage is a space of URIs in which you can individually control for each resource
    who has access to it.
`),

  /**
   * A storage is a space of URIs in which you have access to data.

   */
  Storage: new VocabTerm(
    _NS("Storage"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`storage`)
    .addCommentNoLanguage(`A storage is a space of URIs in which you have access to data.
`),

  /**
   * This is a workspace for storing the 
    information about the other workspaces.
    As a user, you normally don't have to worry about it.
   */
  MasterWorkspace: new VocabTerm(
    _NS("MasterWorkspace"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Master Workspace`, "en")
    .addCommentNoLanguage(`This is a workspace for storing the 
    information about the other workspaces.
    As a user, you normally don't have to worry about it.`),

  /**
   * Access only by the you, the user.
   */
  PrivateWorkspace: new VocabTerm(
    _NS("PrivateWorkspace"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`Private workspace`)
    .addCommentNoLanguage(`Access only by the you, the user.`),

  /**
   * Workspaces are place where data is stored, and associated polices of privacy.
A given application typically stores information in several different
workspaces, some being user private, some shared, and some public.

   */
  Workspace: new VocabTerm(
    _NS("Workspace"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`workspace`)
    .addCommentNoLanguage(`Workspaces are place where data is stored, and associated polices of privacy.
A given application typically stores information in several different
workspaces, some being user private, some shared, and some public.
`),

  /**
   * A personal storage is a space of URIs in which you and only you have access to data,
    you cannot give access to anyone else.

   */
  PersonalStorage: new VocabTerm(
    _NS("PersonalStorage"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`personal storage`)
    .addCommentNoLanguage(`A personal storage is a space of URIs in which you and only you have access to data,
    you cannot give access to anyone else.
`),

  /**
   * A public storage is a space of URIs in which you have access to data,
    and all data is accessible to anyone without control.

   */
  PublicStorage: new VocabTerm(
    _NS("PublicStorage"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`public storage`)
    .addCommentNoLanguage(`A public storage is a space of URIs in which you have access to data,
    and all data is accessible to anyone without control.
`),

  /**
   * Aceess is open to the public. Anything in a public workspace
    can be accesed by anyone.
   */
  PublicWorkspace: new VocabTerm(
    _NS("PublicWorkspace"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`Public workspace`)
    .addCommentNoLanguage(`Aceess is open to the public. Anything in a public workspace
    can be accesed by anyone.`),

  /**
   * AAceess may not be open to the public. 
    Contains preferences resources
   */
  PreferencesWorkspace: new VocabTerm(
    _NS("PreferencesWorkspace"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`Preferences workspace`)
    .addCommentNoLanguage(`AAceess may not be open to the public. 
    Contains preferences resources`),

  /**
   * Access is to some but not all people.
   */
  SharedWorkspace: new VocabTerm(
    _NS("SharedWorkspace"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`Shared workspace`)
    .addCommentNoLanguage(`Access is to some but not all people.`),


  // *******************
  // All the Properties.
  // *******************

  /**
   * master workspace
   */
  masterWorkspace: new VocabTerm(
    _NS("masterWorkspace"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabel(`master workspace`, "en"),

  /**
   * preferences file
   */
  preferencesFile: new VocabTerm(
    _NS("preferencesFile"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`preferences file`),

  /**
   * The storage in which this workspace is
   */
  storage: new VocabTerm(
    _NS("storage"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`storage`)
    .addCommentNoLanguage(`The storage in which this workspace is`),

  /**
   * URIs which start with this string are in this workspace or storage.
This may be used for constructing URIs for new storage resources.

   */
  uriPrefix: new VocabTerm(
    _NS("uriPrefix"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`URI prefix`)
    .addCommentNoLanguage(`URIs which start with this string are in this workspace or storage.
This may be used for constructing URIs for new storage resources.
`),

  /**
   * workspace
   */
  workspace: new VocabTerm(
    _NS("workspace"),
    rdfFactory,
    getLocalStore(),
    false
  )
    .addLabel(`workspace`, "en"),
 };

export default WS;
