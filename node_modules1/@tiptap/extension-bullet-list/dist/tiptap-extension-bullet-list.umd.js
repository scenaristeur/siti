(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tiptap/core'), require('prosemirror-inputrules')) :
  typeof define === 'function' && define.amd ? define(['exports', '@tiptap/core', 'prosemirror-inputrules'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['@tiptap/extension-bullet-list'] = {}, global.core, global.prosemirrorInputrules));
}(this, (function (exports, core, prosemirrorInputrules) { 'use strict';

  const inputRegex = /^\s*([-+*])\s$/;
  const BulletList = core.Node.create({
      name: 'bulletList',
      defaultOptions: {
          HTMLAttributes: {},
      },
      group: 'block list',
      content: 'listItem+',
      parseHTML() {
          return [
              { tag: 'ul' },
          ];
      },
      renderHTML({ HTMLAttributes }) {
          return ['ul', core.mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];
      },
      addCommands() {
          return {
              toggleBulletList: () => ({ commands }) => {
                  return commands.toggleList('bulletList', 'listItem');
              },
          };
      },
      addKeyboardShortcuts() {
          return {
              'Mod-Shift-8': () => this.editor.commands.toggleBulletList(),
          };
      },
      addInputRules() {
          return [
              prosemirrorInputrules.wrappingInputRule(inputRegex, this.type),
          ];
      },
  });

  exports.BulletList = BulletList;
  exports.default = BulletList;
  exports.inputRegex = inputRegex;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=tiptap-extension-bullet-list.umd.js.map
