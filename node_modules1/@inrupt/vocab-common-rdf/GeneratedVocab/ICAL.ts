/**
 * MIT License
 * 
 * Copyright 2020 Inrupt Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the &quot;Software&quot;), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * Generated by the artifact generator [@inrupt/lit-artifact-generator], version [0.13.4]
 * as part of artifact: [vocab-common-rdf], version: [0.7.4]
 * on 'Monday, April 5, 2021 9:51 PM'.
 *
 * Vocabulary built from vocab list file: [common-rdf/Common/Vocab-List-Common-Rdf.yml].
 *
 * [Generator provided] - iCal - a vocabulary for description of events and calendars
 */

import { DataFactory } from 'rdf-data-factory';
import * as RdfTypes from 'rdf-js';

const rdfFactory: RdfTypes.DataFactory = new DataFactory();

function _NS(localName: string): RdfTypes.NamedNode {
  return rdfFactory.namedNode(`https://www.w3.org/2002/12/cal/ical#${localName}`);
}

// Add 'any' type annotation in case this vocab includes 'NamedNode' instances,
// for example instances of Constant IRIs (TypeScript compiler will complain of
// "semantic error TS2742" otherwise).
/**
 * [Generator provided] - iCal - a vocabulary for description of events and calendars
 */
const ICAL: any = {
  PREFIX: "ical",
  NAMESPACE: "https://www.w3.org/2002/12/cal/ical#",
  PREFIX_AND_NAMESPACE: { "ical": "https://www.w3.org/2002/12/cal/ical#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * Provide a grouping of component properties that define an alarm.
   */
  Valarm: _NS("Valarm"),

  /**
   *
   */
  Value_CAL_ADDRESS: _NS("Value_CAL-ADDRESS"),

  /**
   *
   */
  Value_DATE: _NS("Value_DATE"),

  /**
   *
   */
  Value_DATE_TIME: _NS("Value_DATE-TIME"),

  /**
   *
   */
  Value_DURATION: _NS("Value_DURATION"),

  /**
   *
   */
  Value_PERIOD: _NS("Value_PERIOD"),

  /**
   *
   */
  Value_RECUR: _NS("Value_RECUR"),

  /**
   * Provide a grouping of component properties that describe an event.
   */
  Vevent: _NS("Vevent"),

  /**
   * Provide a grouping of component properties that describe either a request for free/busy time, describe a response to a request for free/busy time or describe a published set of busy time.
   */
  Vfreebusy: _NS("Vfreebusy"),

  /**
   * Provide a grouping of component properties that describe a journal entry.
   */
  Vjournal: _NS("Vjournal"),

  /**
   * Provide a grouping of component properties that defines a time zone.
   */
  Vtimezone: _NS("Vtimezone"),

  /**
   * Provide a grouping of calendar properties that describe a to-do.
   */
  Vtodo: _NS("Vtodo"),


  // *******************
  // All the Properties.
  // *******************

  /**
   * 
	    default value type: URI
   */
  attach: _NS("attach"),

  /**
   * 
	    value type: TEXT
   */
  description: _NS("description"),

  /**
   * 
	    value type: TEXT
   */
  summary: _NS("summary"),

  /**
   * 
	    value type: DURATION
   */
  duration: _NS("duration"),

  /**
   * 
	    value type: CAL-ADDRESS
   */
  attendee: _NS("attendee"),

  /**
   * 
	    value type: TEXT
   */
  action: _NS("action"),

  /**
   * 
	    value type: INTEGER
   */
  repeat: _NS("repeat"),

  /**
   * 
	    default value type: DURATION
   */
  trigger: _NS("trigger"),

  /**
   * 
	    value type: TEXT
   */
  categories: _NS("categories"),

  /**
   * 
	    value type: TEXT
   */
  class: _NS("class"),

  /**
   * 
	    value type: TEXT
   */
  comment: _NS("comment"),

  /**
   * This property specifies information related to the global position for the activity specified by a calendar component.
   */
  geo: _NS("geo"),

  /**
   * 
	    value type: TEXT
   */
  location: _NS("location"),

  /**
   * 
	    value type: INTEGER
   */
  priority: _NS("priority"),

  /**
   * 
	    value type: TEXT
   */
  resources: _NS("resources"),

  /**
   * 
	    value type: TEXT
   */
  status: _NS("status"),

  /**
   * 
	    default value type: DATE-TIME
   */
  dtend: _NS("dtend"),

  /**
   * 
	    default value type: DATE-TIME
   */
  dtstart: _NS("dtstart"),

  /**
   * 
	    value type: TEXT
   */
  transp: _NS("transp"),

  /**
   * 
	    value type: TEXT
   */
  contact: _NS("contact"),

  /**
   * 
	    value type: CAL-ADDRESS
   */
  organizer: _NS("organizer"),

  /**
   * 
	    value type: TEXT
   */
  relatedTo: _NS("relatedTo"),

  /**
   * 
	    value type: URI
   */
  url: _NS("url"),

  /**
   * 
	    value type: TEXT
   */
  uid: _NS("uid"),

  /**
   * 
	    value type: RECUR
   */
  exrule: _NS("exrule"),

  /**
   * 
	    default value type: DATE-TIME
   */
  rdate: _NS("rdate"),

  /**
   * 
	    value type: RECUR
   */
  rrule: _NS("rrule"),

  /**
   * 
	    value type: DATE-TIME
   */
  created: _NS("created"),

  /**
   * 
	    value type: DATE-TIME
   */
  dtstamp: _NS("dtstamp"),

  /**
   * 
	    value type: DATE-TIME
   */
  lastModified: _NS("lastModified"),

  /**
   * 
	    value type: integer
   */
  sequence: _NS("sequence"),

  /**
   * 
	    value type: TEXT
   */
  requestStatus: _NS("requestStatus"),

  /**
   * 
	    value type: PERIOD
   */
  freebusy: _NS("freebusy"),

  /**
   * 
	    value type: TEXT
   */
  tzid: _NS("tzid"),

  /**
   * 
	    value type: TEXT
   */
  tzname: _NS("tzname"),

  /**
   * 
	    value type: UTC-OFFSET
   */
  tzoffsetfrom: _NS("tzoffsetfrom"),

  /**
   * 
	    value type: UTC-OFFSET
   */
  tzoffsetto: _NS("tzoffsetto"),

  /**
   * 
	    value type: URI
   */
  tzurl: _NS("tzurl"),

  /**
   * 
	    value type: INTEGER
   */
  percentComplete: _NS("percentComplete"),

  /**
   * 
	    value type: DATE-TIME
   */
  completed: _NS("completed"),

  /**
   * 
	    default value type: DATE-TIME
   */
  due: _NS("due"),

  /**
   * 
	    value type: TEXT
   */
  X_: _NS("X-"),

  /**
   * 
	    value type: TEXT
   */
  calscale: _NS("calscale"),

  /**
   * 
	    default value type: DATE-TIME
   */
  exdate: _NS("exdate"),

  /**
   * 
	    value type: TEXT
   */
  method: _NS("method"),

  /**
   * 
	    value type: TEXT
   */
  prodid: _NS("prodid"),

  /**
   * 
	    default value type: DATE-TIME
   */
  recurrenceId: _NS("recurrenceId"),

  /**
   * 
	    value type: TEXT
   */
  version: _NS("version"),
 }

export default ICAL;
